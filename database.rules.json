{
    "rules": {
        "lies": {
            ".read": true,
            "$lieUid": {
                "accuser": {
                    ".validate": "!data.exists() && newData.val() === auth.uid",
                    ".write": "auth !== null && auth.provider !== 'anonymous'"
                },
                "title": {
                    ".validate": "!data.exists() && newData.isString()",
                    ".write": "auth !== null && auth.provider !== 'anonymous'"
                },
                "liar": {
                    ".validate": "!data.exists() && newData.isString()",
                    ".write": "auth !== null && auth.provider !== 'anonymous'"
                },
                "text": {
                    ".validate": "!data.exists() && newData.isString()",
                    ".write": "auth !== null && auth.provider !== 'anonymous'"
                },
                "votes": {
                    ".write": "auth !== null",

                    "liar": {
                        ".validate": "
                            (!data.exists() && newData.val() === 0)
                            ||
                            (
                                data.exists() && newData.val() === data.val() + 1
                                &&
                                (
                                    !root.child('users').child(auth.uid).child('votes').child($lieUid).exists()
                                    ||
                                    root.child('users').child(auth.uid).child('votes').child($lieUid).val() === 'notLiar'
                                )
                            )
                            ||
                            (
                                data.exists() && newData.val() === data.val() - 1
                                &&
                                root.child('users').child(auth.uid).child('votes').child($lieUid).val() === 'liar'
                            )
                        "
                    },
                    "notLiar": {
                        ".validate": "
                            (!data.exists() && newData.val() === 0)
                            ||
                            (
                                data.exists() && newData.val() === data.val() + 1
                                &&
                                (
                                    !root.child('users').child(auth.uid).child('votes').child($lieUid).exists()
                                    ||
                                    root.child('users').child(auth.uid).child('votes').child($lieUid).val() === 'liar'
                                )
                            )
                            ||
                            (
                                data.exists() && newData.val() === data.val() - 1
                                &&
                                root.child('users').child(auth.uid).child('votes').child($lieUid).val() === 'notLiar'
                            )
                        "
                    }
                },
                "sources": {
                    ".validate": "!data.exists()",
                    ".write": "auth !== null && auth.provider !== 'anonymous'",

                    "statements": {
                        "$key": {
                            "url": {
                                ".validate": "!data.exists() && newData.isString() && newData.val().contains('//')"
                            }
                        }
                    },
                    "refutations": {
                        "$key": {
                            "url": {
                                ".validate": "!data.exists() && newData.isString() && newData.val().contains('//')"
                            }
                        }
                    },
                    "confirmations": {
                        "$key": {
                            "url": {
                                ".validate": "!data.exists() && newData.isString() && newData.val().contains('//')"
                            }
                        }
                    },
                },
                "pictures": {
                    ".validate": "!data.exists() && newData.hasChildren(['main'])",
                    ".write": "auth !== null && auth.provider !== 'anonymous'",

                    "main": {
                        ".validate": "!data.exists() && newData.isString() && newData.val().beginsWith('https://firebasestorage.googleapis.com/v0/b/liarbustr.appspot.com/o/images%2Flies%2F')"
                    }
                }
            }
        },
        "users": {
            "$userUid": {
                ".read": "auth.uid === $userUid",
                ".write": "!data.exists() || (data.exists() && auth.uid === $userUid)",

                "lastLogin": {
                    ".validate": "newData.isNumber()"
                },
                "email": {
                    ".validate": "newData.isString()"
                },
                "isAnonymous": {
                    ".validate": "newData.isBoolean()"
                },
                "name": {
                    ".validate": "newData.isString()"
                },
                "profilePicture": {
                    ".validate": "newData.isString() && newData.val().contains('//')"
                },
                "uid": {
                    ".validate": "!data.exists() || data.val() === newData.val()"
                },
                "votes": {
                    "$lieUid": {
                        ".validate": "newData.isString() && (newData.val() === 'liar' || newData.val() === 'notLiar')"
                    }
                }
            }
        }
    }
}
